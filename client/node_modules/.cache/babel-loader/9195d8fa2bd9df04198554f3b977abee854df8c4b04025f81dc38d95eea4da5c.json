{"ast":null,"code":"import axios from 'axios';\nimport { GET_DOGS, GET_TEMPERAMENTS, GET_FILTER_TEMPERAMENTS, GET_BY_NAME, FILTER_DOGS } from \"./action-types\";\nexport function getDogs() {\n  return async function (dispatch) {\n    let json = await axios.get(\"http://localhost:3001/dogs\");\n    return dispatch({\n      type: GET_DOGS,\n      payload: json.data\n    });\n  };\n}\nexport function getTemperaments() {\n  return async function (dispatch) {\n    try {\n      const res = await axios.get('http://localhost:3001/temps');\n      dispatch({\n        type: GET_TEMPERAMENTS,\n        payload: [...res.data.map(temp => temp.name)]\n      });\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n}\nexport function FilterByTemperament(payload) {\n  return {\n    type: GET_FILTER_TEMPERAMENTS,\n    payload\n  };\n}\n_c = FilterByTemperament;\n;\nexport function getByName(name) {\n  return async function (dispatch) {\n    try {\n      const res = await axios.get(`http://localhost:3001/dogs?name=${name}`);\n      dispatch({\n        type: GET_BY_NAME,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: GET_BY_NAME,\n        payload: console.log(err.response.data)\n      });\n    }\n  };\n}\nexport const filterDogs = filterOption => {\n  return async function (dispatch) {\n    let filteredDogs = [];\n    try {\n      // Primero, solicitamos los perros de la API\n      const apiDogs = await axios.get('http://localhost:3001/dogs');\n\n      // Luego, solicitamos los perros de la base de datos\n      const dbDogs = await axios.get('http://localhost:3001/dogs/po');\n\n      // Combinamos los perros de la API y la base de datos\n      const allDogs = [...apiDogs.data, ...dbDogs.data];\n      if (filterOption === 'created') {\n        filteredDogs = allDogs.filter(dog => dog.createdInDb);\n      } else if (filterOption === 'api') {\n        filteredDogs = allDogs.filter(dog => !dog.createdInDb);\n      } else {\n        filteredDogs = allDogs;\n      }\n      dispatch({\n        type: FILTER_DOGS,\n        payload: filteredDogs\n      });\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n};\nvar _c;\n$RefreshReg$(_c, \"FilterByTemperament\");","map":{"version":3,"names":["axios","GET_DOGS","GET_TEMPERAMENTS","GET_FILTER_TEMPERAMENTS","GET_BY_NAME","FILTER_DOGS","getDogs","dispatch","json","get","type","payload","data","getTemperaments","res","map","temp","name","error","alert","message","FilterByTemperament","_c","getByName","err","console","log","response","filterDogs","filterOption","filteredDogs","apiDogs","dbDogs","allDogs","filter","dog","createdInDb","$RefreshReg$"],"sources":["C:/Users/Thinkpad/OneDrive/Escritorio/PI-DOGS-Clonado/PI-DOGS-OK/PI-DOGS-/PI-Dogs-main/client/src/redux/actions/actions.js"],"sourcesContent":["import axios from 'axios';\r\nimport {GET_DOGS,GET_TEMPERAMENTS,GET_FILTER_TEMPERAMENTS,GET_BY_NAME,FILTER_DOGS} from \"./action-types\";\r\n\r\nexport function getDogs() {\r\n  return async function(dispatch) {\r\n    let json = await axios.get(\"http://localhost:3001/dogs\");\r\n    return dispatch({\r\n      type: GET_DOGS,\r\n      payload: json.data\r\n    });\r\n  };\r\n}\r\n\r\n\r\nexport function getTemperaments() {\r\n  return async function (dispatch) {\r\n      try {\r\n          const res = await axios.get('http://localhost:3001/temps')\r\n          dispatch({ type: GET_TEMPERAMENTS, payload: [...res.data.map(temp => temp.name)] })\r\n      } catch (error) {\r\n          alert(error.message)\r\n      }\r\n  };\r\n  \r\n}\r\n\r\nexport function FilterByTemperament(payload) {\r\n  return{\r\n      type: GET_FILTER_TEMPERAMENTS,\r\n      payload\r\n  }\r\n};\r\n\r\nexport function getByName(name) {\r\n  return async function (dispatch) {\r\n      try {\r\n          const res = await axios.get(`http://localhost:3001/dogs?name=${name}`)\r\n          dispatch({ type: GET_BY_NAME, payload: res.data })\r\n      } catch (err) {\r\n          dispatch({ type: GET_BY_NAME, payload: console.log(err.response.data)})\r\n      }\r\n  };\r\n}\r\nexport const filterDogs = (filterOption) => {\r\n  return async function (dispatch) {\r\n    let filteredDogs = [];\r\n\r\n    try {\r\n      // Primero, solicitamos los perros de la API\r\n      const apiDogs = await axios.get('http://localhost:3001/dogs');\r\n\r\n      // Luego, solicitamos los perros de la base de datos\r\n      const dbDogs = await axios.get('http://localhost:3001/dogs/po');\r\n\r\n      // Combinamos los perros de la API y la base de datos\r\n      const allDogs = [...apiDogs.data, ...dbDogs.data];\r\n\r\n      if (filterOption === 'created') {\r\n        filteredDogs = allDogs.filter((dog) => dog.createdInDb);\r\n      } else if (filterOption === 'api') {\r\n        filteredDogs = allDogs.filter((dog) => !dog.createdInDb);\r\n      } else {\r\n        filteredDogs = allDogs;\r\n      }\r\n\r\n      dispatch({ type: FILTER_DOGS, payload: filteredDogs });\r\n    } catch (error) {\r\n      alert(error.message);\r\n    }\r\n  };\r\n};\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}