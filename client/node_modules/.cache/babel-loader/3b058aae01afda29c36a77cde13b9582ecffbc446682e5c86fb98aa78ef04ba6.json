{"ast":null,"code":"import axios from 'axios';\nimport { GET_DOGS, GET_TEMPERAMENTS, GET_FILTER_TEMPERAMENTS, GET_BY_NAME, FILTER_DOGS } from \"./action-types\";\nexport function getDogs() {\n  return async function (dispatch) {\n    try {\n      let apiResponse = await axios.get(\"http://localhost:3001/dogs\");\n      let dogs = apiResponse.data;\n      let filteredDogs = dogs.filter(dog => dog.createdInDb === true);\n      dispatch({\n        type: GET_DOGS,\n        payload: filteredDogs\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\nexport function getTemperaments() {\n  return async function (dispatch) {\n    try {\n      const res = await axios.get('http://localhost:3001/temps');\n      dispatch({\n        type: GET_TEMPERAMENTS,\n        payload: [...res.data.map(temp => temp.name)]\n      });\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n}\nexport function FilterByTemperament(payload) {\n  return {\n    type: GET_FILTER_TEMPERAMENTS,\n    payload\n  };\n}\n_c = FilterByTemperament;\n;\nexport function getByName(name) {\n  return async function (dispatch) {\n    try {\n      const res = await axios.get(`http://localhost:3001/dogs?name=${name}`);\n      dispatch({\n        type: GET_BY_NAME,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: GET_BY_NAME,\n        payload: console.log(err.response.data)\n      });\n    }\n  };\n}\nexport const filterDogs = filterOption => {\n  return async function (dispatch) {\n    let filteredDogs = [];\n    try {\n      // Primero, solicitamos los perros de la API\n      const apiDogs = await axios.get('http://localhost:3001/dogs');\n\n      // Luego, solicitamos los perros de la base de datos\n      const dbDogs = await axios.get('http://localhost:3001/dogs');\n\n      // Combinamos los perros de la API y la base de datos\n      const allDogs = [...apiDogs.data, ...dbDogs.data];\n      if (filterOption === 'created') {\n        filteredDogs = allDogs.filter(dog => dog.createdInDb);\n      } else if (filterOption === 'api') {\n        filteredDogs = allDogs.filter(dog => !dog.createdInDb);\n      } else {\n        filteredDogs = allDogs;\n      }\n      dispatch({\n        type: FILTER_DOGS,\n        payload: filteredDogs\n      });\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n};\nvar _c;\n$RefreshReg$(_c, \"FilterByTemperament\");","map":{"version":3,"names":["axios","GET_DOGS","GET_TEMPERAMENTS","GET_FILTER_TEMPERAMENTS","GET_BY_NAME","FILTER_DOGS","getDogs","dispatch","apiResponse","get","dogs","data","filteredDogs","filter","dog","createdInDb","type","payload","error","console","log","getTemperaments","res","map","temp","name","alert","message","FilterByTemperament","_c","getByName","err","response","filterDogs","filterOption","apiDogs","dbDogs","allDogs","$RefreshReg$"],"sources":["C:/Users/Thinkpad/OneDrive/Escritorio/PI-DOGS-Clonado/PI-DOGS-OK/PI-DOGS-/PI-Dogs-main/client/src/redux/actions/actions.js"],"sourcesContent":["import axios from 'axios';\r\nimport {GET_DOGS,GET_TEMPERAMENTS,GET_FILTER_TEMPERAMENTS,GET_BY_NAME,FILTER_DOGS} from \"./action-types\";\r\n\r\nexport function getDogs() {\r\n  return async function(dispatch) {\r\n    try {\r\n      let apiResponse = await axios.get(\"http://localhost:3001/dogs\");\r\n      let dogs = apiResponse.data;\r\n      let filteredDogs = dogs.filter(dog => dog.createdInDb === true);\r\n      dispatch({\r\n        type: GET_DOGS,\r\n        payload: filteredDogs\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n}\r\n\r\n\r\nexport function getTemperaments() {\r\n  return async function (dispatch) {\r\n      try {\r\n          const res = await axios.get('http://localhost:3001/temps')\r\n          dispatch({ type: GET_TEMPERAMENTS, payload: [...res.data.map(temp => temp.name)] })\r\n      } catch (error) {\r\n          alert(error.message)\r\n      }\r\n  };\r\n  \r\n}\r\n\r\nexport function FilterByTemperament(payload) {\r\n  return{\r\n      type: GET_FILTER_TEMPERAMENTS,\r\n      payload\r\n  }\r\n};\r\n\r\nexport function getByName(name) {\r\n  return async function (dispatch) {\r\n      try {\r\n          const res = await axios.get(`http://localhost:3001/dogs?name=${name}`)\r\n          dispatch({ type: GET_BY_NAME, payload: res.data })\r\n      } catch (err) {\r\n          dispatch({ type: GET_BY_NAME, payload: console.log(err.response.data)})\r\n      }\r\n  };\r\n}\r\nexport const filterDogs = (filterOption) => {\r\n  return async function (dispatch) {\r\n    let filteredDogs = [];\r\n\r\n    try {\r\n      // Primero, solicitamos los perros de la API\r\n      const apiDogs = await axios.get('http://localhost:3001/dogs');\r\n\r\n      // Luego, solicitamos los perros de la base de datos\r\n      const dbDogs = await axios.get('http://localhost:3001/dogs');\r\n\r\n      // Combinamos los perros de la API y la base de datos\r\n      const allDogs = [...apiDogs.data, ...dbDogs.data];\r\n\r\n      if (filterOption === 'created') {\r\n        filteredDogs = allDogs.filter((dog) => dog.createdInDb);\r\n      } else if (filterOption === 'api') {\r\n        filteredDogs = allDogs.filter((dog) => !dog.createdInDb);\r\n      } else {\r\n        filteredDogs = allDogs;\r\n      }\r\n\r\n      dispatch({ type: FILTER_DOGS, payload: filteredDogs });\r\n    } catch (error) {\r\n      alert(error.message);\r\n    }\r\n  };\r\n};\r\n\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,QAAQ,EAACC,gBAAgB,EAACC,uBAAuB,EAACC,WAAW,EAACC,WAAW,QAAO,gBAAgB;AAExG,OAAO,SAASC,OAAOA,CAAA,EAAG;EACxB,OAAO,gBAAeC,QAAQ,EAAE;IAC9B,IAAI;MACF,IAAIC,WAAW,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,4BAA4B,CAAC;MAC/D,IAAIC,IAAI,GAAGF,WAAW,CAACG,IAAI;MAC3B,IAAIC,YAAY,GAAGF,IAAI,CAACG,MAAM,CAACC,GAAG,IAAIA,GAAG,CAACC,WAAW,KAAK,IAAI,CAAC;MAC/DR,QAAQ,CAAC;QACPS,IAAI,EAAEf,QAAQ;QACdgB,OAAO,EAAEL;MACX,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB;EACF,CAAC;AACH;AAGA,OAAO,SAASG,eAAeA,CAAA,EAAG;EAChC,OAAO,gBAAgBd,QAAQ,EAAE;IAC7B,IAAI;MACA,MAAMe,GAAG,GAAG,MAAMtB,KAAK,CAACS,GAAG,CAAC,6BAA6B,CAAC;MAC1DF,QAAQ,CAAC;QAAES,IAAI,EAAEd,gBAAgB;QAAEe,OAAO,EAAE,CAAC,GAAGK,GAAG,CAACX,IAAI,CAACY,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC;MAAE,CAAC,CAAC;IACvF,CAAC,CAAC,OAAOP,KAAK,EAAE;MACZQ,KAAK,CAACR,KAAK,CAACS,OAAO,CAAC;IACxB;EACJ,CAAC;AAEH;AAEA,OAAO,SAASC,mBAAmBA,CAACX,OAAO,EAAE;EAC3C,OAAM;IACFD,IAAI,EAAEb,uBAAuB;IAC7Bc;EACJ,CAAC;AACH;AAACY,EAAA,GALeD,mBAAmB;AAKlC;AAED,OAAO,SAASE,SAASA,CAACL,IAAI,EAAE;EAC9B,OAAO,gBAAgBlB,QAAQ,EAAE;IAC7B,IAAI;MACA,MAAMe,GAAG,GAAG,MAAMtB,KAAK,CAACS,GAAG,CAAE,mCAAkCgB,IAAK,EAAC,CAAC;MACtElB,QAAQ,CAAC;QAAES,IAAI,EAAEZ,WAAW;QAAEa,OAAO,EAAEK,GAAG,CAACX;MAAK,CAAC,CAAC;IACtD,CAAC,CAAC,OAAOoB,GAAG,EAAE;MACVxB,QAAQ,CAAC;QAAES,IAAI,EAAEZ,WAAW;QAAEa,OAAO,EAAEE,OAAO,CAACC,GAAG,CAACW,GAAG,CAACC,QAAQ,CAACrB,IAAI;MAAC,CAAC,CAAC;IAC3E;EACJ,CAAC;AACH;AACA,OAAO,MAAMsB,UAAU,GAAIC,YAAY,IAAK;EAC1C,OAAO,gBAAgB3B,QAAQ,EAAE;IAC/B,IAAIK,YAAY,GAAG,EAAE;IAErB,IAAI;MACF;MACA,MAAMuB,OAAO,GAAG,MAAMnC,KAAK,CAACS,GAAG,CAAC,4BAA4B,CAAC;;MAE7D;MACA,MAAM2B,MAAM,GAAG,MAAMpC,KAAK,CAACS,GAAG,CAAC,4BAA4B,CAAC;;MAE5D;MACA,MAAM4B,OAAO,GAAG,CAAC,GAAGF,OAAO,CAACxB,IAAI,EAAE,GAAGyB,MAAM,CAACzB,IAAI,CAAC;MAEjD,IAAIuB,YAAY,KAAK,SAAS,EAAE;QAC9BtB,YAAY,GAAGyB,OAAO,CAACxB,MAAM,CAAEC,GAAG,IAAKA,GAAG,CAACC,WAAW,CAAC;MACzD,CAAC,MAAM,IAAImB,YAAY,KAAK,KAAK,EAAE;QACjCtB,YAAY,GAAGyB,OAAO,CAACxB,MAAM,CAAEC,GAAG,IAAK,CAACA,GAAG,CAACC,WAAW,CAAC;MAC1D,CAAC,MAAM;QACLH,YAAY,GAAGyB,OAAO;MACxB;MAEA9B,QAAQ,CAAC;QAAES,IAAI,EAAEX,WAAW;QAAEY,OAAO,EAAEL;MAAa,CAAC,CAAC;IACxD,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdQ,KAAK,CAACR,KAAK,CAACS,OAAO,CAAC;IACtB;EACF,CAAC;AACH,CAAC;AAAC,IAAAE,EAAA;AAAAS,YAAA,CAAAT,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}