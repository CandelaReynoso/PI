{"ast":null,"code":"// estado inicial de nuestro reducer.\n// acá traigo la lista de las razas, los temperamentos, y los detalles (si se pidieron)\n// dogsCopy es una copia de dogs. sobre esta se hacen los filtros (para evitar problemas con array ya filtrado)\n\nconst initialState = {\n  dogs: [],\n  details: [],\n  dogsCopy: [],\n  temperaments: []\n};\nfunction rootReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case 'GET_DOGS':\n      return {\n        ...state,\n        dogs: action.payload\n      };\n    case 'FILTER_BY_STATUS':\n      const dogsCopy = state.dogsCopy;\n      const statusFiltered = action.payload === 'created' ? dogsCopy.filter(el => el.createInDb) : allDogs.filter(el => !el.createInDb);\n      return {\n        ...state,\n        dogs: action.payload === \"all\" ? state.dogsCopy : statusFiltered\n      };\n    case 'GET_TEMPERAMENTS':\n      return {\n        ...state,\n        temperaments: action.payload\n      };\n    case 'GET_BY_NAME':\n      return {\n        ...state,\n        dogs: action.payload\n      };\n    case 'GET_BY_ID':\n      return {\n        ...state,\n        details: action.payload\n      };\n    case 'SORT_BY_TEMPERAMENT':\n      const allDogs = state.dogsCopy;\n      const filterDog = action.payload === 'All' ? allDogs : allDogs.filter(e => {\n        var _e$temperament;\n        return (_e$temperament = e.temperament) === null || _e$temperament === void 0 ? void 0 : _e$temperament.find(d => d === action.payload);\n      });\n      return {\n        ...state,\n        dogs: filterDog\n      };\n    default:\n      return state;\n  }\n}\nexport default rootReducer;","map":{"version":3,"names":["initialState","dogs","details","dogsCopy","temperaments","rootReducer","state","arguments","length","undefined","action","type","payload","statusFiltered","filter","el","createInDb","allDogs","filterDog","e","_e$temperament","temperament","find","d"],"sources":["C:/Users/Thinkpad/OneDrive/Escritorio/PI-DOGS-Clonado/PI-DOGS-OK/PI-DOGS-/PI-Dogs-main/client/src/redux/reducer/reducer.js"],"sourcesContent":["// estado inicial de nuestro reducer.\r\n// acá traigo la lista de las razas, los temperamentos, y los detalles (si se pidieron)\r\n// dogsCopy es una copia de dogs. sobre esta se hacen los filtros (para evitar problemas con array ya filtrado)\r\n\r\n\r\nconst initialState = {\r\n    dogs: [],\r\n    details: [],\r\n    dogsCopy: [],\r\n    temperaments: [],\r\n};\r\n\r\nfunction rootReducer(state = initialState, action) {\r\n    switch(action.type){\r\n        case 'GET_DOGS':\r\n            return {\r\n                ...state,\r\n                dogs: action.payload\r\n            }\r\n         case 'FILTER_BY_STATUS':\r\n            const dogsCopy= state.dogsCopy\r\n            const statusFiltered = action.payload === 'created'? dogsCopy.filter(el => el.createInDb) : allDogs.filter(el => !el.createInDb)\r\n            return {\r\n                ...state,\r\n                dogs: action.payload === \"all\" ? state.dogsCopy : statusFiltered\r\n            }\r\n        case 'GET_TEMPERAMENTS':\r\n                return {\r\n                    ...state,\r\n                    temperaments: action.payload\r\n                }   \r\n        case 'GET_BY_NAME':\r\n                    return {\r\n                        ...state,\r\n                        dogs: action.payload\r\n                    }\r\n        \r\n        \r\n        case 'GET_BY_ID':\r\n                    return {\r\n                        ...state,\r\n                        details: action.payload\r\n                    }\r\n    \r\n        case 'SORT_BY_TEMPERAMENT':\r\n                            const allDogs = state.dogsCopy;\r\n                            const filterDog = action.payload === 'All'? allDogs : allDogs.filter((e) => e.temperament?.find(d => d === action.payload));\r\n                            return {\r\n                                ...state,\r\n                                dogs: filterDog\r\n                            }\r\n                      default:\r\n                      return state;\r\n    }\r\n}\r\nexport default rootReducer;"],"mappings":"AAAA;AACA;AACA;;AAGA,MAAMA,YAAY,GAAG;EACjBC,IAAI,EAAE,EAAE;EACRC,OAAO,EAAE,EAAE;EACXC,QAAQ,EAAE,EAAE;EACZC,YAAY,EAAE;AAClB,CAAC;AAED,SAASC,WAAWA,CAAA,EAA+B;EAAA,IAA9BC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGP,YAAY;EAAA,IAAEU,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC7C,QAAOC,MAAM,CAACC,IAAI;IACd,KAAK,UAAU;MACX,OAAO;QACH,GAAGL,KAAK;QACRL,IAAI,EAAES,MAAM,CAACE;MACjB,CAAC;IACJ,KAAK,kBAAkB;MACpB,MAAMT,QAAQ,GAAEG,KAAK,CAACH,QAAQ;MAC9B,MAAMU,cAAc,GAAGH,MAAM,CAACE,OAAO,KAAK,SAAS,GAAET,QAAQ,CAACW,MAAM,CAACC,EAAE,IAAIA,EAAE,CAACC,UAAU,CAAC,GAAGC,OAAO,CAACH,MAAM,CAACC,EAAE,IAAI,CAACA,EAAE,CAACC,UAAU,CAAC;MAChI,OAAO;QACH,GAAGV,KAAK;QACRL,IAAI,EAAES,MAAM,CAACE,OAAO,KAAK,KAAK,GAAGN,KAAK,CAACH,QAAQ,GAAGU;MACtD,CAAC;IACL,KAAK,kBAAkB;MACf,OAAO;QACH,GAAGP,KAAK;QACRF,YAAY,EAAEM,MAAM,CAACE;MACzB,CAAC;IACT,KAAK,aAAa;MACN,OAAO;QACH,GAAGN,KAAK;QACRL,IAAI,EAAES,MAAM,CAACE;MACjB,CAAC;IAGb,KAAK,WAAW;MACJ,OAAO;QACH,GAAGN,KAAK;QACRJ,OAAO,EAAEQ,MAAM,CAACE;MACpB,CAAC;IAEb,KAAK,qBAAqB;MACN,MAAMK,OAAO,GAAGX,KAAK,CAACH,QAAQ;MAC9B,MAAMe,SAAS,GAAGR,MAAM,CAACE,OAAO,KAAK,KAAK,GAAEK,OAAO,GAAGA,OAAO,CAACH,MAAM,CAAEK,CAAC;QAAA,IAAAC,cAAA;QAAA,QAAAA,cAAA,GAAKD,CAAC,CAACE,WAAW,cAAAD,cAAA,uBAAbA,cAAA,CAAeE,IAAI,CAACC,CAAC,IAAIA,CAAC,KAAKb,MAAM,CAACE,OAAO,CAAC;MAAA,EAAC;MAC3H,OAAO;QACH,GAAGN,KAAK;QACRL,IAAI,EAAEiB;MACV,CAAC;IACP;MACA,OAAOZ,KAAK;EAAC;AAEnC;AACA,eAAeD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}